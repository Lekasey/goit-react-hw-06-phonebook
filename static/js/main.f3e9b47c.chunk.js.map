{"version":3,"sources":["Components/ContactListItem/ContactListItem.js","redux/phonebook/phonebook-actions.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Form/Form.js","App.js","redux/phonebook/phonebooks-reducer.js","redux/store.js","index.js"],"names":["ContactListItem","name","number","onClick","className","type","addContact","createAction","payload","id","shortid","generate","deleteContact","changeFilter","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","connect","state","phonebook","contacts","dispatch","onDeleteContact","phonebookActions","map","value","onChange","e","currentTarget","Form","submitHandler","preventDefault","props","onSubmit","reset","handleInputChange","setState","this","pattern","title","required","Component","App","length","defaultProps","PropTypes","array","createReducer","actions","newContact","normalizedNewContact","nameSearch","alert","presentCheck","_","combineReducers","contactsPersistConfig","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","middleware","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f3e9b47c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactListItem.css';\n\nconst ContactListItem = ({ name, number, onClick }) => {\n  return (\n    <li className=\"ContactListItem\">\n      <p>\n        {name}: <span>{number}</span>\n      </p>\n      <button className=\"button\" type=\"button\" onClick={onClick}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default ContactListItem;\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('phonebook/addContact', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name: name,\n    number: number,\n  },\n}));\nconst deleteContact = createAction('phonebook/deleteContact');\nconst changeFilter = createAction('phonebook/changeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, changeFilter };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\nimport './ContactList.css';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onClick={() => onDeleteContact(id)}\n        ></ContactListItem>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n  return visibleContacts;\n};\n\nconst mapStateToProps = state => {\n  const { contacts, filter } = state.phonebook;\n  return {\n    contacts: getVisibleContacts(contacts, filter),\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(phonebookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.css';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          className=\"filterInput\"\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(phonebookActions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Form.css';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"form\" onSubmit={this.submitHandler}>\n        <label className=\"label\">\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={name}\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className=\"label\">\n          Number\n          <input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            value={number}\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button className=\"button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(phonebookActions.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\nimport Form from './Components/Form';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form />\n        <div className=\"wrapper\">\n          <h2>Contacts</h2>\n          <Filter />\n          {this.props.contacts.length > 0 ? (\n            <ContactList />\n          ) : (\n            <p className=\"noContacts\">No contacts added yet</p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nApp.defaultProps = {\n  contacts: PropTypes.array,\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => ({ contacts: state.phonebook.contacts });\n\nexport default connect(mapStateToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './phonebook-actions';\n\nconst presentCheck = (allContacts, newContact) => {\n  const normalizedNewContact = newContact.name.toLowerCase();\n  const nameSearch = allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedNewContact),\n  );\n  if (nameSearch.length !== 0) {\n    alert(`${newContact.name} is already in contacts`);\n  }\n  return nameSearch;\n};\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    return presentCheck(state, payload).length === 0\n      ? [...state, payload]\n      : state;\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport phonebookReducer from './phonebook/phonebooks-reducer';\n\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    phonebook: persistReducer(contactsPersistConfig, phonebookReducer),\n  },\n  middleware:\n    process.env.NODE_ENV === 'development'\n      ? middleware\n      : getDefaultMiddleware(),\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}